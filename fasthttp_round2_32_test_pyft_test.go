//go:build !amd64 && !arm64 && !ppc64 && !ppc64le && !riscv64 && !s390x

package fasthttp

import (
	"math"
	"testing"
)

func TestRound2_32(t *testing.T) {
	testCases := []struct {
		input    int
		expected int
	}{
		{0, 0},
		{-1, 0},
		{1, 1},
		{2, 2},
		{3, 4},
		{4, 4},
		{5, 8},
		{8, 8},
		{9, 16},
		{16, 16},
		{17, 32},
		{32, 32},
		{33, 64},
		{64, 64},
		{65, 128},
		{128, 128},
		{129, 256},
		{256, 256},
		{257, 512},
		{512, 512},
		{513, 1024},
		{1024, 1024},
		{1025, 2048},
		{2048, 2048},
		{2049, 4096},
		{4096, 4096},
		{4097, 8192},
		{8192, 8192},
		{8193, 16384},
		{16384, 16384},
		{16385, 32768},
		{32768, 32768},
		{32769, 65536},
		{65536, 65536},
		{65537, 131072},
		{131072, 131072},
		{131073, 262144},
		{262144, 262144},
		{262145, 524288},
		{524288, 524288},
		{524289, 1048576},
		{1048576, 1048576},
		{1048577, 2097152},
		{2097152, 2097152},
		{2097153, 4194304},
		{4194304, 4194304},
		{4194305, 8388608},
		{8388608, 8388608},
		{8388609, 16777216},
		{16777216, 16777216},
		{16777217, 33554432},
		{33554432, 33554432},
		{33554433, 67108864},
		{67108864, 67108864},
		{67108865, 100 * 1024 * 1024 + 1},
		{100 * 1024 * 1024, 100 * 1024 * 1024},
		{math.MaxInt32, math.MaxInt32},
		{math.MaxInt32 - 1, math.MaxInt32},
	}

	for _, tc := range testCases {
		t.Run("", func(t *testing.T) {
			if got := roundUpForSliceCap(tc.input); got != tc.expected {
				t.Errorf("expected %d, got %d", tc.expected, got)
			}
		})
	}
}